# Multi-stage production Dockerfile for Nexus Frontend

# Stage 1: Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Build arguments for production environment
ARG NODE_ENV=production
ARG REACT_APP_API_URL
ARG REACT_APP_SOCKET_URL

ENV NODE_ENV=$NODE_ENV
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_SOCKET_URL=$REACT_APP_SOCKET_URL
ENV GENERATE_SOURCEMAP=false

# Build the application
RUN npm run build

# Stage 2: Production stage with nginx
FROM nginx:alpine AS production

# Install security updates
RUN apk upgrade --no-cache

# Copy built app from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create non-root user
RUN adduser -D -s /bin/sh nexus

# Set proper permissions
RUN chown -R nexus:nexus /usr/share/nginx/html && \
    chown -R nexus:nexus /var/cache/nginx && \
    chown -R nexus:nexus /var/log/nginx && \
    chown -R nexus:nexus /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nexus:nexus /var/run/nginx.pid

# Switch to non-root user
USER nexus

# Expose port
EXPOSE 8080

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]